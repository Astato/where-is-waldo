{"ast":null,"code":"const medium_1 = [];\nconst medium_2 = [];\nconst medium_3 = [];\nconst hard_3 = [];\nfunction checkForWin(board, cellID) {\n  const clickedCell = document.getElementById(cellID);\n  console.log(board);\n  if (board === \"easy-1\" || board === \"medium-1\") {\n    clickedCell.setAttribute(\"style\", \" height:200%; border:solid red 4px; border-radius:40%; margin-top: -20px\");\n    board === \"easy-1\" ? alert(\"win\") /// win for easy 1\n    : medium_1.length < 1 ? medium_1.push(true) : alert(\"win\"); /// win for medium 1\n\n    return clickedCell.id = \"\";\n  } else if (board === \"easy-2\" || board === \"medium-2\") {\n    clickedCell.setAttribute(\"style\", \" height:190%; border:solid red 4px; border-radius:40%; margin-top: -6px\");\n    board === \"easy-2\" ? alert(\"win\") /// win for easy 2\n    : medium_2.length < 1 ? medium_2.push(true) : alert(\"win\"); /// win for medium 2\n\n    return clickedCell.id = \"\";\n  } else if (board === \"easy-3\" || board === \"hard-3\") {\n    clickedCell.setAttribute(\"style\", \" height:150%; border:solid red 4px; border-radius:40%; margin-top: -6px\");\n    board === \"easy-3\" ? alert(\"win\") /// win for easy 2\n    : hard_3.length < 2 ? hard_3.push(true) : alert(\"win\"); /// win for medium 2\n  }\n}\n\nfunction gamerules(cellid, gameImg) {\n  const clickedCell = Number(cellid.split(\"-\")[1]);\n  let difficulty;\n  const imageNameRegex = /(medium|easy|hard)-\\d+/;\n  const boardName = gameImg.match(imageNameRegex)[0];\n  gameImg.match(\"easy\") ? difficulty = \"easy\" : gameImg.match(\"medium\") ? difficulty = \"medium\" : difficulty = \"hard\";\n  switch (boardName) {\n    case \"easy-1\":\n      if (clickedCell === 310) return checkForWin(boardName, cellid);\n    case \"easy-2\":\n      if (clickedCell === 265) return checkForWin(boardName, cellid);\n    case \"easy-3\":\n      if (clickedCell === 591) return checkForWin(boardName, cellid);\n    case \"medium-1\":\n      if (clickedCell === 310 || clickedCell === 261) return checkForWin(boardName, cellid);\n    case \"medium-2\":\n      if (clickedCell === 265 || clickedCell === 635) return checkForWin(boardName, cellid);\n    case \"medium-3\":\n      if (null) return checkForWin(boardName, cellid);\n    case \"hard-1\":\n      if (clickedCell === 591) return checkForWin(boardName, cellid);\n    case \"hard-2\":\n      if (clickedCell === 591) return checkForWin(boardName, cellid);\n    case \"hard-3\":\n      if (clickedCell === 265) return checkForWin(boardName, cellid);\n    default:\n      return;\n  }\n}\nexport default gamerules;","map":{"version":3,"names":["medium_1","medium_2","medium_3","hard_3","checkForWin","board","cellID","clickedCell","document","getElementById","console","log","setAttribute","alert","length","push","id","gamerules","cellid","gameImg","Number","split","difficulty","imageNameRegex","boardName","match"],"sources":["/home/fernando/Repositories/where-is-waldo/src/components/gamerules.js"],"sourcesContent":["const medium_1 = [];\nconst medium_2 = [];\nconst medium_3 = [];\nconst hard_3 = [];\n\nfunction checkForWin(board, cellID) {\n  const clickedCell = document.getElementById(cellID);\n  console.log(board);\n  if (board === \"easy-1\" || board === \"medium-1\") {\n    clickedCell.setAttribute(\n      \"style\",\n      \" height:200%; border:solid red 4px; border-radius:40%; margin-top: -20px\"\n    );\n    board === \"easy-1\"\n      ? alert(\"win\") /// win for easy 1\n      : medium_1.length < 1\n      ? medium_1.push(true)\n      : alert(\"win\"); /// win for medium 1\n\n    return (clickedCell.id = \"\");\n  } else if (board === \"easy-2\" || board === \"medium-2\") {\n    clickedCell.setAttribute(\n      \"style\",\n      \" height:190%; border:solid red 4px; border-radius:40%; margin-top: -6px\"\n    );\n    board === \"easy-2\"\n      ? alert(\"win\") /// win for easy 2\n      : medium_2.length < 1\n      ? medium_2.push(true)\n      : alert(\"win\"); /// win for medium 2\n\n    return (clickedCell.id = \"\");\n  } else if (board === \"easy-3\" || board === \"hard-3\") {\n    clickedCell.setAttribute(\n      \"style\",\n      \" height:150%; border:solid red 4px; border-radius:40%; margin-top: -6px\"\n    );\n    board === \"easy-3\"\n      ? alert(\"win\") /// win for easy 2\n      : hard_3.length < 2\n      ? hard_3.push(true)\n      : alert(\"win\"); /// win for medium 2\n  }\n}\n\nfunction gamerules(cellid, gameImg) {\n  const clickedCell = Number(cellid.split(\"-\")[1]);\n  let difficulty;\n  const imageNameRegex = /(medium|easy|hard)-\\d+/;\n  const boardName = gameImg.match(imageNameRegex)[0];\n  gameImg.match(\"easy\")\n    ? (difficulty = \"easy\")\n    : gameImg.match(\"medium\")\n    ? (difficulty = \"medium\")\n    : (difficulty = \"hard\");\n\n  switch (boardName) {\n    case \"easy-1\":\n      if (clickedCell === 310) return checkForWin(boardName, cellid);\n    case \"easy-2\":\n      if (clickedCell === 265) return checkForWin(boardName, cellid);\n    case \"easy-3\":\n      if (clickedCell === 591) return checkForWin(boardName, cellid);\n\n    case \"medium-1\":\n      if (clickedCell === 310 || clickedCell === 261)\n        return checkForWin(boardName, cellid);\n    case \"medium-2\":\n      if (clickedCell === 265 || clickedCell === 635)\n        return checkForWin(boardName, cellid);\n    case \"medium-3\":\n      if (null) return checkForWin(boardName, cellid);\n\n    case \"hard-1\":\n      if (clickedCell === 591) return checkForWin(boardName, cellid);\n    case \"hard-2\":\n      if (clickedCell === 591) return checkForWin(boardName, cellid);\n    case \"hard-3\":\n      if (clickedCell === 265) return checkForWin(boardName, cellid);\n    default:\n      return;\n  }\n}\n\nexport default gamerules;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}