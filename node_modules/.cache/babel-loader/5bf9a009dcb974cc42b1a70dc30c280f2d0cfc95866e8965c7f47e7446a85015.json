{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar EventEmitter = require('events').EventEmitter;\nvar inherits = require('util').inherits;\n\n/**\n * Expose `Timer`.\n */\nmodule.exports = Timer;\n\n/**\n * Stores named timers.\n */\nvar timers = {};\n\n/**\n * Initialize a `Timer` object\n * @param {Boolean} start\n * @api public\n */\nfunction Timer(start) {\n  EventEmitter.call(this);\n  this._total = 0;\n  this._start = null;\n  this._startCount = 0;\n  if (start) {\n    this.start();\n  }\n}\n\n/**\n * Timer extends EventEmitter.\n */\ninherits(Timer, EventEmitter);\n\n/**\n * Get a named timer, initialize a new one if it does not exist.\n * @param {String} name\n * @return {Timer}\n * @api public\n */\nTimer.get = function (name) {\n  if (!timers[name]) {\n    timers[name] = new Timer();\n  }\n  return timers[name];\n};\n\n/**\n * Destroy an existing named timer.\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\nTimer.destroy = function (name) {\n  if (timers[name]) {\n    return delete timers[name];\n  }\n  return false;\n};\n\n/**\n * Get the total milliseconds the timer has run.\n * @return {Number}\n * #api public\n */\nTimer.prototype.time = function () {\n  var total = this._total;\n  total += this.timeFromStart();\n  return total;\n};\n\n/**\n * Get the total millisseonds the time has run and emit time event.\n * @return {Number}\n */\nTimer.prototype.emitTime = function () {\n  var time = this.time();\n  this.emit('time', time);\n  return time;\n};\n\n/**\n * Get the time in milliseconds since the timer was last started.\n * @return {Number}\n * @api public\n */\nTimer.prototype.timeFromStart = function () {\n  return this.isStarted() ? now() - this._start : 0;\n};\n\n/**\n * Check to see if the timer object is currently started.\n * @return {Boolean}\n * @api public\n */\nTimer.prototype.isStarted = function () {\n  return !this.isStopped();\n};\n\n/**\n * Check to see if the timer object is currently stopped.\n * @return {Boolean}\n * @api public\n */\nTimer.prototype.isStopped = function () {\n  return this._start === null;\n};\n\n/**\n * Start the timer if it was not already started.\n * @return {Boolean}\n * @api public\n */\nTimer.prototype.start = function () {\n  ++this._startCount;\n  if (this.isStopped()) {\n    this._start = now();\n    this.emit('start');\n    return true;\n  }\n  return false;\n};\n\n/**\n * Stop the timer if it was not already stopped.\n * @return {Boolean}\n * @api public\n */\nTimer.prototype.stop = function () {\n  if (this.isStarted()) {\n    this._total += this.timeFromStart();\n    this._start = null;\n    this._stopCount = 0;\n    this.emit('stop');\n    return true;\n  }\n  return false;\n};\n\n/**\n * Stop the timer if once called equal to the number of times start was called.\n * @return {Boolean} true if timer was stopped\n * @api public\n */\nTimer.prototype.stopParallel = function () {\n  if (this.isStarted()) {\n    --this._startCount;\n    if (this._startCount === 0) {\n      return this.stop();\n    }\n  }\n  return false;\n};\n\n/**\n * Start or stop the timer depending on current state.\n * @return {Boolean}\n * @api public\n */\nTimer.prototype.toggle = function () {\n  return this.start() || this.stop();\n};\n\n/**\n * Return a string representation of the timer.\n * @return {String}\n */\nTimer.prototype.toString = function () {\n  return this.time() + 'ms';\n};\n\n/**\n * Return a numeric value of the timer in milliseconds.\n * @return {Number}\n */\nTimer.prototype.valueOf = function () {\n  return this.time();\n};\n\n/**\n * Get the current time in milliseconds.\n * @return {Number}\n * @api private\n */\nfunction now() {\n  return new Date().getTime();\n}","map":{"version":3,"names":["EventEmitter","require","inherits","module","exports","Timer","timers","start","call","_total","_start","_startCount","get","name","destroy","prototype","time","total","timeFromStart","emitTime","emit","isStarted","now","isStopped","stop","_stopCount","stopParallel","toggle","toString","valueOf","Date","getTime"],"sources":["/home/fernando/Repositories/where-is-waldo/node_modules/timer-machine/lib/timer.js"],"sourcesContent":["/**\n * Module dependencies.\n */\nvar EventEmitter = require('events').EventEmitter\nvar inherits     = require('util').inherits\n\n/**\n * Expose `Timer`.\n */\nmodule.exports = Timer\n\n/**\n * Stores named timers.\n */\nvar timers = {}\n\n/**\n * Initialize a `Timer` object\n * @param {Boolean} start\n * @api public\n */\nfunction Timer(start) {\n  EventEmitter.call(this)\n  this._total = 0\n  this._start = null\n  this._startCount = 0\n  if (start) {\n    this.start()\n  }\n}\n\n/**\n * Timer extends EventEmitter.\n */\ninherits(Timer, EventEmitter)\n\n/**\n * Get a named timer, initialize a new one if it does not exist.\n * @param {String} name\n * @return {Timer}\n * @api public\n */\nTimer.get = function (name) {\n  if (!timers[name]) {\n    timers[name] = new Timer()\n  }\n  return timers[name]\n}\n\n/**\n * Destroy an existing named timer.\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\nTimer.destroy = function (name) {\n  if (timers[name]) {\n    return delete timers[name]\n  }\n  return false\n}\n\n/**\n * Get the total milliseconds the timer has run.\n * @return {Number}\n * #api public\n */\nTimer.prototype.time = function () {\n  var total = this._total\n  total += this.timeFromStart()\n  return total\n}\n\n/**\n * Get the total millisseonds the time has run and emit time event.\n * @return {Number}\n */\nTimer.prototype.emitTime = function () {\n  var time = this.time()\n  this.emit('time', time)\n  return time\n}\n\n/**\n * Get the time in milliseconds since the timer was last started.\n * @return {Number}\n * @api public\n */\nTimer.prototype.timeFromStart = function () {\n  return this.isStarted() ? now() - this._start : 0\n}\n\n/**\n * Check to see if the timer object is currently started.\n * @return {Boolean}\n * @api public\n */\nTimer.prototype.isStarted = function () {\n  return !this.isStopped()\n}\n\n/**\n * Check to see if the timer object is currently stopped.\n * @return {Boolean}\n * @api public\n */\nTimer.prototype.isStopped = function () {\n  return this._start === null\n}\n\n/**\n * Start the timer if it was not already started.\n * @return {Boolean}\n * @api public\n */\nTimer.prototype.start = function () {\n  ++this._startCount\n  if (this.isStopped()) {\n    this._start = now()\n    this.emit('start')\n    return true\n  }\n  return false\n}\n\n/**\n * Stop the timer if it was not already stopped.\n * @return {Boolean}\n * @api public\n */\nTimer.prototype.stop = function () {\n  if (this.isStarted()) {\n    this._total += this.timeFromStart()\n    this._start = null\n    this._stopCount = 0\n    this.emit('stop')\n    return true\n  }\n  return false\n}\n\n/**\n * Stop the timer if once called equal to the number of times start was called.\n * @return {Boolean} true if timer was stopped\n * @api public\n */\nTimer.prototype.stopParallel = function () {\n  if (this.isStarted()) {\n    --this._startCount\n    if (this._startCount === 0) {\n      return this.stop()\n    }\n  }\n  return false\n}\n\n/**\n * Start or stop the timer depending on current state.\n * @return {Boolean}\n * @api public\n */\nTimer.prototype.toggle = function () {\n  return this.start() || this.stop()\n}\n\n/**\n * Return a string representation of the timer.\n * @return {String}\n */\nTimer.prototype.toString = function () {\n  return this.time() + 'ms'\n}\n\n/**\n * Return a numeric value of the timer in milliseconds.\n * @return {Number}\n */\nTimer.prototype.valueOf = function () {\n  return this.time()\n}\n\n/**\n * Get the current time in milliseconds.\n * @return {Number}\n * @api private\n */\nfunction now() {\n  return new Date().getTime();\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,YAAY,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,YAAY;AACjD,IAAIE,QAAQ,GAAOD,OAAO,CAAC,MAAM,CAAC,CAACC,QAAQ;;AAE3C;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAGC,KAAK;;AAEtB;AACA;AACA;AACA,IAAIC,MAAM,GAAG,CAAC,CAAC;;AAEf;AACA;AACA;AACA;AACA;AACA,SAASD,KAAKA,CAACE,KAAK,EAAE;EACpBP,YAAY,CAACQ,IAAI,CAAC,IAAI,CAAC;EACvB,IAAI,CAACC,MAAM,GAAG,CAAC;EACf,IAAI,CAACC,MAAM,GAAG,IAAI;EAClB,IAAI,CAACC,WAAW,GAAG,CAAC;EACpB,IAAIJ,KAAK,EAAE;IACT,IAAI,CAACA,KAAK,CAAC,CAAC;EACd;AACF;;AAEA;AACA;AACA;AACAL,QAAQ,CAACG,KAAK,EAAEL,YAAY,CAAC;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACAK,KAAK,CAACO,GAAG,GAAG,UAAUC,IAAI,EAAE;EAC1B,IAAI,CAACP,MAAM,CAACO,IAAI,CAAC,EAAE;IACjBP,MAAM,CAACO,IAAI,CAAC,GAAG,IAAIR,KAAK,CAAC,CAAC;EAC5B;EACA,OAAOC,MAAM,CAACO,IAAI,CAAC;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAR,KAAK,CAACS,OAAO,GAAG,UAAUD,IAAI,EAAE;EAC9B,IAAIP,MAAM,CAACO,IAAI,CAAC,EAAE;IAChB,OAAO,OAAOP,MAAM,CAACO,IAAI,CAAC;EAC5B;EACA,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAR,KAAK,CAACU,SAAS,CAACC,IAAI,GAAG,YAAY;EACjC,IAAIC,KAAK,GAAG,IAAI,CAACR,MAAM;EACvBQ,KAAK,IAAI,IAAI,CAACC,aAAa,CAAC,CAAC;EAC7B,OAAOD,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACAZ,KAAK,CAACU,SAAS,CAACI,QAAQ,GAAG,YAAY;EACrC,IAAIH,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC,CAAC;EACtB,IAAI,CAACI,IAAI,CAAC,MAAM,EAAEJ,IAAI,CAAC;EACvB,OAAOA,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAX,KAAK,CAACU,SAAS,CAACG,aAAa,GAAG,YAAY;EAC1C,OAAO,IAAI,CAACG,SAAS,CAAC,CAAC,GAAGC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACZ,MAAM,GAAG,CAAC;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAL,KAAK,CAACU,SAAS,CAACM,SAAS,GAAG,YAAY;EACtC,OAAO,CAAC,IAAI,CAACE,SAAS,CAAC,CAAC;AAC1B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAlB,KAAK,CAACU,SAAS,CAACQ,SAAS,GAAG,YAAY;EACtC,OAAO,IAAI,CAACb,MAAM,KAAK,IAAI;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAL,KAAK,CAACU,SAAS,CAACR,KAAK,GAAG,YAAY;EAClC,EAAE,IAAI,CAACI,WAAW;EAClB,IAAI,IAAI,CAACY,SAAS,CAAC,CAAC,EAAE;IACpB,IAAI,CAACb,MAAM,GAAGY,GAAG,CAAC,CAAC;IACnB,IAAI,CAACF,IAAI,CAAC,OAAO,CAAC;IAClB,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAf,KAAK,CAACU,SAAS,CAACS,IAAI,GAAG,YAAY;EACjC,IAAI,IAAI,CAACH,SAAS,CAAC,CAAC,EAAE;IACpB,IAAI,CAACZ,MAAM,IAAI,IAAI,CAACS,aAAa,CAAC,CAAC;IACnC,IAAI,CAACR,MAAM,GAAG,IAAI;IAClB,IAAI,CAACe,UAAU,GAAG,CAAC;IACnB,IAAI,CAACL,IAAI,CAAC,MAAM,CAAC;IACjB,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAf,KAAK,CAACU,SAAS,CAACW,YAAY,GAAG,YAAY;EACzC,IAAI,IAAI,CAACL,SAAS,CAAC,CAAC,EAAE;IACpB,EAAE,IAAI,CAACV,WAAW;IAClB,IAAI,IAAI,CAACA,WAAW,KAAK,CAAC,EAAE;MAC1B,OAAO,IAAI,CAACa,IAAI,CAAC,CAAC;IACpB;EACF;EACA,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAnB,KAAK,CAACU,SAAS,CAACY,MAAM,GAAG,YAAY;EACnC,OAAO,IAAI,CAACpB,KAAK,CAAC,CAAC,IAAI,IAAI,CAACiB,IAAI,CAAC,CAAC;AACpC,CAAC;;AAED;AACA;AACA;AACA;AACAnB,KAAK,CAACU,SAAS,CAACa,QAAQ,GAAG,YAAY;EACrC,OAAO,IAAI,CAACZ,IAAI,CAAC,CAAC,GAAG,IAAI;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACAX,KAAK,CAACU,SAAS,CAACc,OAAO,GAAG,YAAY;EACpC,OAAO,IAAI,CAACb,IAAI,CAAC,CAAC;AACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAASM,GAAGA,CAAA,EAAG;EACb,OAAO,IAAIQ,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;AAC7B"},"metadata":{},"sourceType":"script","externalDependencies":[]}