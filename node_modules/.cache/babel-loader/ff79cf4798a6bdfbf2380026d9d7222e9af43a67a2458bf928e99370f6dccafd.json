{"ast":null,"code":"var medium_1=[];var medium_2=[];var medium_3=[];var hard_1=[];var hard_2=[];var hard_3=[];function addHitIndicator(cell){var hitbox=document.createElement(\"div\");hitbox.classList.add(\"hitbox\");return cell.appendChild(hitbox);}function checkForWin(board,cellID){console.log(board,cellID);var clickedCell=document.getElementById(cellID);if(board===\"easy-1\"||board===\"medium-1\"){addHitIndicator(clickedCell);board===\"easy-1\"?alert(\"win\")/// win for easy 1\n:medium_1.length<1?medium_1.push(true):alert(\"win\");/// win for medium 1\n}else if(board===\"easy-2\"||board===\"medium-2\"){addHitIndicator(clickedCell);board===\"easy-2\"?alert(\"win\")/// win for easy 2\n:medium_2.length<1?medium_2.push(true):alert(\"win\");/// win for medium 2\n}else if(board===\"easy-3\"||board===\"hard-3\"){addHitIndicator(clickedCell);board===\"easy-3\"?alert(\"win\")/// win for easy 3\n:hard_3.length<3?hard_3.push(true):alert(\"win\");/// win for hard 3\n}else if(board===\"medium-3\"||\"hard-2\"){addHitIndicator(clickedCell);if(board===\"medium-3\"){medium_3.length<1?medium_3.push(true):alert(\"win\");}else{hard_2.length<3?hard_2.push(true):alert(\"win\");}}return clickedCell.id=\"\";}function gamerules(cellid,gameImg){if(!cellid&&!gameImg){medium_1=[];medium_2=[];medium_3=[];hard_1=[];hard_2=[];return hard_3=[];}var clickedCell=Number(cellid.split(\"-\")[1]);var imageNameRegex=/(medium|easy|hard)-\\d+/;var boardName=gameImg.match(imageNameRegex)[0];switch(boardName){case\"easy-1\":if(clickedCell===310)checkForWin(boardName,cellid);return;case\"easy-2\":if(clickedCell===591)checkForWin(boardName,cellid);return;case\"easy-3\":if(clickedCell===422)checkForWin(boardName,cellid);return;case\"medium-1\":if(clickedCell===261||clickedCell===310)checkForWin(boardName,cellid);return;case\"medium-2\":if(clickedCell===635||clickedCell===591)checkForWin(boardName,cellid);return;case\"medium-3\":console.log(clickedCell,boardName,\"por que entra\");if(clickedCell===482||clickedCell===460)checkForWin(boardName,cellid);return;case\"hard-1\":if(clickedCell===159||clickedCell===583||clickedCell===586||clickedCell===60)checkForWin(boardName,cellid);return;case\"hard-2\":if(clickedCell===482||clickedCell===460||clickedCell===406||clickedCell===542)checkForWin(boardName,cellid);return;case\"hard-3\":if(clickedCell===422||clickedCell===201||clickedCell===482||clickedCell===615)checkForWin(boardName,cellid);return;default:return console.log(false);}}export default gamerules;","map":{"version":3,"names":["medium_1","medium_2","medium_3","hard_1","hard_2","hard_3","addHitIndicator","cell","hitbox","document","createElement","classList","add","appendChild","checkForWin","board","cellID","console","log","clickedCell","getElementById","alert","length","push","id","gamerules","cellid","gameImg","Number","split","imageNameRegex","boardName","match"],"sources":["/home/fernando/Repositories/where-is-waldo/src/components/gamerules.js"],"sourcesContent":["let medium_1 = [];\nlet medium_2 = [];\nlet medium_3 = [];\nlet hard_1 = [];\nlet hard_2 = [];\nlet hard_3 = [];\n\nfunction addHitIndicator(cell) {\n  const hitbox = document.createElement(\"div\");\n  hitbox.classList.add(\"hitbox\");\n  return cell.appendChild(hitbox);\n}\n\nfunction checkForWin(board, cellID) {\n  console.log(board, cellID);\n  const clickedCell = document.getElementById(cellID);\n  if (board === \"easy-1\" || board === \"medium-1\") {\n    addHitIndicator(clickedCell);\n    board === \"easy-1\"\n      ? alert(\"win\") /// win for easy 1\n      : medium_1.length < 1\n      ? medium_1.push(true)\n      : alert(\"win\"); /// win for medium 1\n  } else if (board === \"easy-2\" || board === \"medium-2\") {\n    addHitIndicator(clickedCell);\n    board === \"easy-2\"\n      ? alert(\"win\") /// win for easy 2\n      : medium_2.length < 1\n      ? medium_2.push(true)\n      : alert(\"win\"); /// win for medium 2\n  } else if (board === \"easy-3\" || board === \"hard-3\") {\n    addHitIndicator(clickedCell);\n    board === \"easy-3\"\n      ? alert(\"win\") /// win for easy 3\n      : hard_3.length < 3\n      ? hard_3.push(true)\n      : alert(\"win\"); /// win for hard 3\n  } else if (board === \"medium-3\" || \"hard-2\") {\n    addHitIndicator(clickedCell);\n    if (board === \"medium-3\") {\n      medium_3.length < 1 ? medium_3.push(true) : alert(\"win\");\n    } else {\n      hard_2.length < 3 ? hard_2.push(true) : alert(\"win\");\n    }\n  }\n  return (clickedCell.id = \"\");\n}\n\nfunction gamerules(cellid, gameImg) {\n  if (!cellid && !gameImg) {\n    medium_1 = [];\n    medium_2 = [];\n    medium_3 = [];\n    hard_1 = [];\n    hard_2 = [];\n    return (hard_3 = []);\n  }\n  const clickedCell = Number(cellid.split(\"-\")[1]);\n  const imageNameRegex = /(medium|easy|hard)-\\d+/;\n  const boardName = gameImg.match(imageNameRegex)[0];\n\n  switch (boardName) {\n    case \"easy-1\":\n      if (clickedCell === 310) checkForWin(boardName, cellid);\n      return;\n    case \"easy-2\":\n      if (clickedCell === 591) checkForWin(boardName, cellid);\n      return;\n    case \"easy-3\":\n      if (clickedCell === 422) checkForWin(boardName, cellid);\n      return;\n\n    case \"medium-1\":\n      if (clickedCell === 261 || clickedCell === 310)\n        checkForWin(boardName, cellid);\n      return;\n    case \"medium-2\":\n      if (clickedCell === 635 || clickedCell === 591)\n        checkForWin(boardName, cellid);\n      return;\n    case \"medium-3\":\n      console.log(clickedCell, boardName, \"por que entra\");\n      if (clickedCell === 482 || clickedCell === 460)\n        checkForWin(boardName, cellid);\n      return;\n\n    case \"hard-1\":\n      if (\n        clickedCell === 159 ||\n        clickedCell === 583 ||\n        clickedCell === 586 ||\n        clickedCell === 60\n      )\n        checkForWin(boardName, cellid);\n      return;\n    case \"hard-2\":\n      if (\n        clickedCell === 482 ||\n        clickedCell === 460 ||\n        clickedCell === 406 ||\n        clickedCell === 542\n      )\n        checkForWin(boardName, cellid);\n      return;\n    case \"hard-3\":\n      if (\n        clickedCell === 422 ||\n        clickedCell === 201 ||\n        clickedCell === 482 ||\n        clickedCell === 615\n      )\n        checkForWin(boardName, cellid);\n      return;\n    default:\n      return console.log(false);\n  }\n}\n\nexport default gamerules;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}