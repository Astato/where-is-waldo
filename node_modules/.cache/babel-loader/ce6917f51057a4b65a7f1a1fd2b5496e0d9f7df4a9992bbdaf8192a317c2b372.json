{"ast":null,"code":"let medium_1 = [];\nlet medium_2 = [];\nlet medium_3 = [];\nlet hard_1 = [];\nlet hard_2 = [];\nlet hard_3 = [];\nfunction setHitIndicatorStyle(cell) {\n  cell.setAttribute(\"style\", \" height:100%; border:solid red 4px; border-radius:40%;width: 100% \");\n}\nfunction checkForWin(board, cellID, character) {\n  const clickedCell = document.getElementById(cellID);\n  console.log(board);\n  if (board === \"easy-1\" || board === \"medium-1\") {\n    setHitIndicatorStyle(clickedCell);\n    board === \"easy-1\" ? alert(\"win\") /// win for easy 1\n    : medium_1.length < 1 ? medium_1.push(true) : alert(\"win\"); /// win for medium 1\n\n    // return (clickedCell.id = \"\");\n  } else if (board === \"easy-2\" || board === \"medium-2\") {\n    setHitIndicatorStyle(clickedCell);\n    board === \"easy-2\" ? alert(\"win\") /// win for easy 2\n    : medium_2.length < 1 ? medium_2.push(true) : alert(\"win\"); /// win for medium 2\n\n    return clickedCell.id = \"\";\n  } else if (board === \"easy-3\" || board === \"hard-3\") {\n    setHitIndicatorStyle(clickedCell);\n    board === \"easy-3\" ? alert(\"win\") /// win for easy 3\n    : hard_3.length < 2 ? hard_3.push(true) : alert(\"win\"); /// win for hard 3\n  } else if (board === \"medium-3\" || \"hard-2\") {\n    setHitIndicatorStyle(clickedCell);\n    medium_3.length < 1 ? medium_3.push(true) : alert(\"win\");\n  }\n}\nfunction gamerules(cellid, gameImg) {\n  if (!cellid && !gameImg) {\n    medium_1 = [];\n    medium_2 = [];\n    medium_3 = [];\n    hard_1 = [];\n    hard_2 = [];\n    return hard_3 = [];\n  }\n  const clickedCell = Number(cellid.split(\"-\")[1]);\n  const imageNameRegex = /(medium|easy|hard)-\\d+/;\n  const boardName = gameImg.match(imageNameRegex)[0];\n  switch (boardName) {\n    case \"easy-1\":\n      if (clickedCell === 310) checkForWin(boardName, cellid);\n      return;\n    case \"easy-2\":\n      if (clickedCell === 591) checkForWin(boardName, cellid);\n      return;\n    case \"easy-3\":\n      if (clickedCell === 265) checkForWin(boardName, cellid);\n      return;\n    case \"medium-1\":\n      if (clickedCell === 261 || clickedCell === 310) checkForWin(boardName, cellid);\n      return;\n    case \"medium-2\":\n      if (clickedCell === 635 || clickedCell === 591) checkForWin(boardName, cellid);\n      return;\n    case \"medium-3\":\n      if (clickedCell === 482 || clickedCell === 460) ;\n      return checkForWin(boardName, cellid);\n    case \"hard-1\":\n      if (clickedCell === 591) return checkForWin(boardName, cellid);\n    case \"hard-2\":\n      if (clickedCell === 591) return checkForWin(boardName, cellid);\n    case \"hard-3\":\n      if (clickedCell === 265) return checkForWin(boardName, cellid);\n    default:\n      return;\n  }\n}\nexport default gamerules;","map":{"version":3,"names":["medium_1","medium_2","medium_3","hard_1","hard_2","hard_3","setHitIndicatorStyle","cell","setAttribute","checkForWin","board","cellID","character","clickedCell","document","getElementById","console","log","alert","length","push","id","gamerules","cellid","gameImg","Number","split","imageNameRegex","boardName","match"],"sources":["/home/fernando/Repositories/where-is-waldo/src/components/gamerules.js"],"sourcesContent":["let medium_1 = [];\nlet medium_2 = [];\nlet medium_3 = [];\nlet hard_1 = [];\nlet hard_2 = [];\nlet hard_3 = [];\n\nfunction setHitIndicatorStyle(cell) {\n  cell.setAttribute(\n    \"style\",\n    \" height:100%; border:solid red 4px; border-radius:40%;width: 100% \"\n  );\n}\n\nfunction checkForWin(board, cellID, character) {\n  const clickedCell = document.getElementById(cellID);\n  console.log(board);\n  if (board === \"easy-1\" || board === \"medium-1\") {\n    setHitIndicatorStyle(clickedCell);\n    board === \"easy-1\"\n      ? alert(\"win\") /// win for easy 1\n      : medium_1.length < 1\n      ? medium_1.push(true)\n      : alert(\"win\"); /// win for medium 1\n\n    // return (clickedCell.id = \"\");\n  } else if (board === \"easy-2\" || board === \"medium-2\") {\n    setHitIndicatorStyle(clickedCell);\n    board === \"easy-2\"\n      ? alert(\"win\") /// win for easy 2\n      : medium_2.length < 1\n      ? medium_2.push(true)\n      : alert(\"win\"); /// win for medium 2\n\n    return (clickedCell.id = \"\");\n  } else if (board === \"easy-3\" || board === \"hard-3\") {\n    setHitIndicatorStyle(clickedCell);\n    board === \"easy-3\"\n      ? alert(\"win\") /// win for easy 3\n      : hard_3.length < 2\n      ? hard_3.push(true)\n      : alert(\"win\"); /// win for hard 3\n  } else if (board === \"medium-3\" || \"hard-2\") {\n    setHitIndicatorStyle(clickedCell);\n    medium_3.length < 1 ? medium_3.push(true) : alert(\"win\");\n  }\n}\n\nfunction gamerules(cellid, gameImg) {\n  if (!cellid && !gameImg) {\n    medium_1 = [];\n    medium_2 = [];\n    medium_3 = [];\n    hard_1 = [];\n    hard_2 = [];\n    return (hard_3 = []);\n  }\n  const clickedCell = Number(cellid.split(\"-\")[1]);\n  const imageNameRegex = /(medium|easy|hard)-\\d+/;\n  const boardName = gameImg.match(imageNameRegex)[0];\n\n  switch (boardName) {\n    case \"easy-1\":\n      if (clickedCell === 310) checkForWin(boardName, cellid);\n      return;\n    case \"easy-2\":\n      if (clickedCell === 591) checkForWin(boardName, cellid);\n      return;\n    case \"easy-3\":\n      if (clickedCell === 265) checkForWin(boardName, cellid);\n      return;\n\n    case \"medium-1\":\n      if (clickedCell === 261 || clickedCell === 310)\n        checkForWin(boardName, cellid);\n      return;\n    case \"medium-2\":\n      if (clickedCell === 635 || clickedCell === 591)\n        checkForWin(boardName, cellid);\n      return;\n    case \"medium-3\":\n      if (clickedCell === 482 || clickedCell === 460);\n      return checkForWin(boardName, cellid);\n\n    case \"hard-1\":\n      if (clickedCell === 591) return checkForWin(boardName, cellid);\n    case \"hard-2\":\n      if (clickedCell === 591) return checkForWin(boardName, cellid);\n    case \"hard-3\":\n      if (clickedCell === 265) return checkForWin(boardName, cellid);\n    default:\n      return;\n  }\n}\n\nexport default gamerules;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}