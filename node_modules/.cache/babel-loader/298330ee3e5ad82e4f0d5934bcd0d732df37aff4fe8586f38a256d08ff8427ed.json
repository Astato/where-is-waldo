{"ast":null,"code":"let medium_1 = [];\nlet medium_2 = [];\nlet medium_3 = [];\nlet hard_1 = [];\nlet hard_2 = [];\nlet hard_3 = [];\nfunction addHitIndicator(cell) {\n  const hitbox = document.createElement(\"div\");\n  hitbox.classList.add(\"hitbox\");\n  return cell.appendChild(hitbox);\n}\nfunction checkForWin(board, cellID) {\n  const clickedCell = document.getElementById(cellID);\n  const targetingBox = document.getElementById(\"targeting-box\");\n  if (board === \"easy-1\" || board === \"medium-1\") {\n    addHitIndicator(clickedCell);\n    board === \"easy-1\" ? alert(\"win\") /// win for easy 1\n    : medium_1.length < 1 ? medium_1.push(true) : alert(\"win\"); /// win for medium 1\n  } else if (board === \"easy-2\" || board === \"medium-2\") {\n    addHitIndicator(clickedCell);\n    board === \"easy-2\" ? alert(\"win\") /// win for easy 2\n    : medium_2.length < 1 ? medium_2.push(true) : alert(\"win\"); /// win for medium 2\n  } else if (board === \"easy-3\" || board === \"hard-3\") {\n    addHitIndicator(clickedCell);\n    board === \"easy-3\" ? alert(\"win\") /// win for easy 3\n    : hard_3.length < 3 ? hard_3.push(true) : alert(\"win\"); /// win for hard 3\n  } else if (board === \"medium-3\" || \"hard-2\") {\n    addHitIndicator(clickedCell);\n    if (board === \"medium-3\") {\n      medium_3.length < 1 ? medium_3.push(true) : alert(\"win\");\n    } else {\n      hard_2.length < 3 ? hard_2.push(true) : alert(\"win\");\n    }\n  } else if (board === \"hard-1\") {\n    hard_1.length < 3 ? hard_1.push(true) : alert(\"win\");\n  }\n  return clickedCell.id = \"\";\n}\nfunction gamerules(cellid, gameImg) {\n  if (!cellid && !gameImg) {\n    medium_1 = [];\n    medium_2 = [];\n    medium_3 = [];\n    hard_1 = [];\n    hard_2 = [];\n    hard_3 = [];\n    return;\n  }\n  const clickedCell = Number(cellid.split(\"-\")[1]);\n  const imageNameRegex = /(medium|easy|hard)-\\d+/;\n  const boardName = gameImg.match(imageNameRegex)[0];\n  switch (boardName) {\n    case \"easy-1\":\n      if (clickedCell === 310) checkForWin(boardName, cellid);\n    case \"easy-2\":\n      if (clickedCell === 591) checkForWin(boardName, cellid);\n    case \"easy-3\":\n      if (clickedCell === 422) checkForWin(boardName, cellid);\n    case \"medium-1\":\n      if (clickedCell === 261 || clickedCell === 310) checkForWin(boardName, cellid);\n    case \"medium-2\":\n      if (clickedCell === 635 || clickedCell === 591) checkForWin(boardName, cellid);\n    case \"medium-3\":\n      if (clickedCell === 482 || clickedCell === 460) checkForWin(boardName, cellid);\n    case \"hard-1\":\n      if (clickedCell === 159 || clickedCell === 583 || clickedCell === 586 || clickedCell === 60) checkForWin(boardName, cellid);\n    case \"hard-2\":\n      if (clickedCell === 482 || clickedCell === 460 || clickedCell === 406 || clickedCell === 542) checkForWin(boardName, cellid);\n    case \"hard-3\":\n      if (clickedCell === 422 || clickedCell === 201 || clickedCell === 482 || clickedCell === 615) checkForWin(boardName, cellid);\n    default:\n      document.getElementById(\"targeting-box\");\n  }\n}\nexport default gamerules;","map":{"version":3,"names":["medium_1","medium_2","medium_3","hard_1","hard_2","hard_3","addHitIndicator","cell","hitbox","document","createElement","classList","add","appendChild","checkForWin","board","cellID","clickedCell","getElementById","targetingBox","alert","length","push","id","gamerules","cellid","gameImg","Number","split","imageNameRegex","boardName","match"],"sources":["/home/fernando/Repositories/where-is-waldo/src/utils/gamerules.js"],"sourcesContent":["let medium_1 = [];\nlet medium_2 = [];\nlet medium_3 = [];\nlet hard_1 = [];\nlet hard_2 = [];\nlet hard_3 = [];\n\nfunction addHitIndicator(cell) {\n  const hitbox = document.createElement(\"div\");\n  hitbox.classList.add(\"hitbox\");\n  return cell.appendChild(hitbox);\n}\n\nfunction checkForWin(board, cellID) {\n  const clickedCell = document.getElementById(cellID);\n  const targetingBox = document.getElementById(\"targeting-box\");\n  if (board === \"easy-1\" || board === \"medium-1\") {\n    addHitIndicator(clickedCell);\n    board === \"easy-1\"\n      ? alert(\"win\") /// win for easy 1\n      : medium_1.length < 1\n      ? medium_1.push(true)\n      : alert(\"win\"); /// win for medium 1\n  } else if (board === \"easy-2\" || board === \"medium-2\") {\n    addHitIndicator(clickedCell);\n    board === \"easy-2\"\n      ? alert(\"win\") /// win for easy 2\n      : medium_2.length < 1\n      ? medium_2.push(true)\n      : alert(\"win\"); /// win for medium 2\n  } else if (board === \"easy-3\" || board === \"hard-3\") {\n    addHitIndicator(clickedCell);\n    board === \"easy-3\"\n      ? alert(\"win\") /// win for easy 3\n      : hard_3.length < 3\n      ? hard_3.push(true)\n      : alert(\"win\"); /// win for hard 3\n  } else if (board === \"medium-3\" || \"hard-2\") {\n    addHitIndicator(clickedCell);\n    if (board === \"medium-3\") {\n      medium_3.length < 1 ? medium_3.push(true) : alert(\"win\");\n    } else {\n      hard_2.length < 3 ? hard_2.push(true) : alert(\"win\");\n    }\n  } else if (board === \"hard-1\") {\n    hard_1.length < 3 ? hard_1.push(true) : alert(\"win\");\n  }\n  return (clickedCell.id = \"\");\n}\n\nfunction gamerules(cellid, gameImg) {\n  if (!cellid && !gameImg) {\n    medium_1 = [];\n    medium_2 = [];\n    medium_3 = [];\n    hard_1 = [];\n    hard_2 = [];\n    hard_3 = [];\n    return;\n  }\n  const clickedCell = Number(cellid.split(\"-\")[1]);\n  const imageNameRegex = /(medium|easy|hard)-\\d+/;\n  const boardName = gameImg.match(imageNameRegex)[0];\n\n  switch (boardName) {\n    case \"easy-1\":\n      if (clickedCell === 310) checkForWin(boardName, cellid);\n    case \"easy-2\":\n      if (clickedCell === 591) checkForWin(boardName, cellid);\n    case \"easy-3\":\n      if (clickedCell === 422) checkForWin(boardName, cellid);\n\n    case \"medium-1\":\n      if (clickedCell === 261 || clickedCell === 310)\n        checkForWin(boardName, cellid);\n    case \"medium-2\":\n      if (clickedCell === 635 || clickedCell === 591)\n        checkForWin(boardName, cellid);\n    case \"medium-3\":\n      if (clickedCell === 482 || clickedCell === 460)\n        checkForWin(boardName, cellid);\n\n    case \"hard-1\":\n      if (\n        clickedCell === 159 ||\n        clickedCell === 583 ||\n        clickedCell === 586 ||\n        clickedCell === 60\n      )\n        checkForWin(boardName, cellid);\n    case \"hard-2\":\n      if (\n        clickedCell === 482 ||\n        clickedCell === 460 ||\n        clickedCell === 406 ||\n        clickedCell === 542\n      )\n        checkForWin(boardName, cellid);\n    case \"hard-3\":\n      if (\n        clickedCell === 422 ||\n        clickedCell === 201 ||\n        clickedCell === 482 ||\n        clickedCell === 615\n      )\n        checkForWin(boardName, cellid);\n    default:\n      document.getElementById(\"targeting-box\");\n  }\n}\n\nexport default gamerules;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}