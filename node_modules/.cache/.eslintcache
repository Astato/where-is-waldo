[{"/home/fernando/Repositories/where-is-waldo/src/index.js":"1","/home/fernando/Repositories/where-is-waldo/src/App.js":"2","/home/fernando/Repositories/where-is-waldo/src/components/home.js":"3","/home/fernando/Repositories/where-is-waldo/src/components/navbar.js":"4","/home/fernando/Repositories/where-is-waldo2/src/index.js":"5","/home/fernando/Repositories/where-is-waldo2/src/App.js":"6","/home/fernando/Repositories/where-is-waldo2/src/components/navbar.js":"7","/home/fernando/Repositories/where-is-waldo2/src/components/home.js":"8","/home/fernando/Repositories/where-is-waldo/src/components/gamechoosepage.js":"9","/home/fernando/Repositories/where-is-waldo/src/utils/gamerules.js":"10","/home/fernando/Repositories/where-is-waldo/src/components/stopwatch.js":"11"},{"size":310,"mtime":1687325363626,"results":"12","hashOfConfig":"13"},{"size":205,"mtime":1687942182965,"results":"14","hashOfConfig":"13"},{"size":10933,"mtime":1687945543586,"results":"15","hashOfConfig":"13"},{"size":1192,"mtime":1687909236655,"results":"16","hashOfConfig":"13"},{"size":310,"mtime":1687325363626,"results":"17","hashOfConfig":"18"},{"size":205,"mtime":1687256240286,"results":"19","hashOfConfig":"18"},{"size":1312,"mtime":1687326269393,"results":"20","hashOfConfig":"18"},{"size":3442,"mtime":1687338982090,"results":"21","hashOfConfig":"18"},{"size":4574,"mtime":1687935360047,"results":"22","hashOfConfig":"13"},{"size":3575,"mtime":1687944122281,"results":"23","hashOfConfig":"13"},{"size":1108,"mtime":1687943323419,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ghq5s0",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16x0s4c",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"/home/fernando/Repositories/where-is-waldo/src/index.js",[],[],[],"/home/fernando/Repositories/where-is-waldo/src/App.js",[],[],"/home/fernando/Repositories/where-is-waldo/src/components/home.js",["65","66","67","68","69","70"],[],"import { useEffect, useState, useRef } from \"react\";\nimport gamerules, { setIsGameWon } from \"../utils/gamerules.js\";\nimport GameChoosePage from \"./gamechoosepage\";\nimport Stopwatch from \"./stopwatch.js\";\nimport zoominIcon from \"../assets/icons-images/zoom_in.png\";\nimport zoomoutIcon from \"../assets/icons-images/zoom_out.png\";\nimport magnificationLargeIcon from \"../assets/icons-images/magnification_large.png\";\nimport magnificationSmalIcon from \"../assets/icons-images/magnification_small.png\";\nimport waldo from \"../assets/game-images/waldo.png\";\nimport walda from \"../assets/game-images/walda.jpg\";\nimport evilWaldo from \"../assets/game-images/evil-waldo.jpg\";\nimport wizard from \"../assets/game-images/wizard.jpg\";\nimport HTMLMagnifier from \"html-magnifier/html-magnifier\";\nimport { isGameWon } from \"../utils/gamerules.js\";\n\nconst magnifier = new HTMLMagnifier({\n  width: 300,\n  height: 200,\n});\n\nmagnifier.on(\"syncScrollBars\", function (magnifierContent) {\n  const scrollableArea = magnifierContent.querySelector(\"#root\");\n  const scrollTop = document.querySelector(\"html\").scrollTop;\n  scrollableArea.scrollTop = scrollTop;\n});\n\nmagnifier.on(\"prepareContent\", function (magnifierContent) {\n  const elementsToRemove = magnifierContent.querySelectorAll(\"button\");\n  for (var i = 0; i < elementsToRemove.length; i++) {\n    const element = elementsToRemove[i];\n    element.parentNode.removeChild(element);\n  }\n});\n\nfunction CreateGrid({ zoom, setZoom, gameImg }) {\n  const containerWidth = (70 / 100) * window.innerWidth;\n  const containerHeigth = (70 / 100) * window.innerHeight;\n  const cellWidth = (containerWidth / 36).toString() + \"px\";\n  const cellHeight = (containerHeigth / 20).toString() + \"px\";\n\n  const handleZoom = (zoomButton) => {\n    if (zoom === 1.25 && zoomButton === \"increaseZoom\") {\n      return;\n    }\n    if (zoom === 1 && zoomButton === \"decreaseZoom\") {\n      return;\n    }\n    zoomButton === \"increaseZoom\"\n      ? setZoom((Zoom) => Zoom + 0.25)\n      : setZoom((Zoom) => Zoom - 0.25);\n  };\n\n  const cells = [];\n  for (let w = 0; w < 792; w++) {\n    if (w === 2) {\n      cells.push(\n        <div\n          id={w}\n          className=\"cells\"\n          key={w}\n          style={{ width: cellWidth, height: cellHeight }}\n        >\n          <button\n            className=\"button tiny\"\n            onClick={() => handleZoom(\"increaseZoom\")}\n          >\n            +\n          </button>\n        </div>\n      );\n      continue;\n    }\n    if (w === 0) {\n      cells.push(\n        <div\n          id={w}\n          className=\"cells\"\n          key={w}\n          style={{ width: cellWidth, height: cellHeight }}\n        >\n          <button\n            className=\"button tiny\"\n            onClick={() => handleZoom(\"decreaseZoom\")}\n          >\n            -\n          </button>\n        </div>\n      );\n    } else {\n      cells.push(\n        <div\n          id={\"cell-\" + w}\n          className=\"cells\"\n          key={w}\n          onClick={(e) => {\n            gamerules(e.target.id, gameImg);\n            console.log(e.target.id);\n          }}\n          style={{ width: cellWidth, height: cellHeight }}\n        ></div>\n      );\n    }\n  }\n  return cells;\n}\n\nconst Home = () => {\n  const [zoom, setZoom] = useState(1);\n  const [gameImg, setGameImg] = useState(false);\n  const [windowSize, setWindowSize] = useState(window.innerWidth);\n  const [showMagnifyingGlass, setShowMagnifyingGlass] = useState(false);\n  const [centerX, setCenterX] = useState(null);\n  const [centerY, setCenterY] = useState(null);\n  const [startTimer, setStartTimer] = useState(false);\n  const [gameTime, setGameTime] = useState(null);\n  const [isInputHidden, setIsInputHidden] = useState(\"input-hidden\");\n  const modalRef = useRef(null);\n  const homeRef = useRef(null);\n  const winModalRef = useRef(null);\n\n  const handleResize = () => {\n    setWindowSize(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  });\n\n  useEffect(() => {\n    console.log(gameTime);\n\n    if (gameTime) {\n      winModalRef.current.showModal();\n    }\n  }, [gameTime]);\n\n  const handleClick = (e, arg) => {\n    if (arg) {\n      magnifier.show();\n      e.target.textContent = \"Close Magnifying Glass\";\n    } else {\n      magnifier.hide();\n      e.target.textContent = \"Magnifying Glass\";\n    }\n    setShowMagnifyingGlass(arg);\n  };\n\n  const handleEditMagnifyingGlass = (edit) => {\n    const currentHeight = magnifier.getHeight();\n    const currentWidth = magnifier.getWidth();\n    const currentZoom = magnifier.getZoom();\n    if (edit === \"increase\" && currentWidth < 600) {\n      magnifier.setHeight(currentHeight + 50);\n      magnifier.setWidth(currentWidth + 100);\n    }\n    if (edit === \"decrease\" && currentWidth > 300) {\n      magnifier.setHeight(currentHeight - 50);\n      magnifier.setWidth(currentWidth - 100);\n    }\n    if (edit === \"zoomin\" && currentZoom < 3) {\n      magnifier.setZoom(currentZoom + 0.5);\n    }\n    if (edit === \"zoomout\" && currentZoom > 2) {\n      magnifier.setZoom(currentZoom - 0.5);\n    } else {\n      return;\n    }\n  };\n\n  const handleFollowMouse = (e) => {\n    setCenterY(e.clientY - 10 + window.scrollY + \"px\");\n    setCenterX(e.clientX - 10 + \"px\");\n  };\n\n  const handleBackButton = () => {\n    setGameImg(null);\n    setZoom(1);\n    gamerules(\"\", \"\");\n    setStartTimer(false);\n    setGameTime(null);\n    setIsGameWon();\n  };\n\n  const handleRegisterTime = (e) => {\n    setIsInputHidden(\"input-shown\");\n    e.target.innerText = \"Save\";\n  };\n\n  return (\n    <div id=\"home\" ref={homeRef}>\n      <dialog id=\"win-dialog\" ref={winModalRef}>\n        <div id=\"win-dialog-items-container\">\n          <h2>Congratulations!!!! </h2>\n          {gameTime ? (\n            <strong>\n              Your Finished in:\n              {gameTime[0] === 0\n                ? gameTime[1] + \" Seconds\"\n                : gameTime[0] + \":\" + gameTime[1]}\n            </strong>\n          ) : (\n            <></>\n          )}\n          <div>\n            <div className={isInputHidden}>\n              <input type=\"text\"></input>\n            </div>\n            <button className=\"button\" onClick={handleRegisterTime}>\n              Register time\n            </button>\n            <button\n              className=\"button\"\n              onClick={() => {\n                winModalRef.current.close();\n                handleBackButton();\n                setIsInputHidden(\"input-hidden\");\n              }}\n            >\n              New Game\n            </button>\n          </div>\n        </div>\n      </dialog>\n\n      {gameImg ? (\n        <>\n          <Stopwatch\n            startTimer={startTimer}\n            setStartTimer={setStartTimer}\n            setGameTime={setGameTime}\n          />\n          <button\n            className=\"button\"\n            style={{ position: \"absolute\", top: \"24rem\", left: \".5rem\" }}\n            onClick={() => {\n              setStartTimer(\"pause\");\n              modalRef.current.showModal();\n              homeRef.current.classList.add(\"modal-overlay\");\n            }}\n          >\n            Pause\n          </button>\n        </>\n      ) : (\n        <></>\n      )}\n      <button\n        id=\"back-button\"\n        className={`button large ${gameImg ? \"\" : \"hide\"}`}\n        onClick={handleBackButton}\n        hidden={!gameImg}\n      >\n        Back\n      </button>\n      <div>\n        <button\n          className={`button large ${gameImg ? \"\" : \"hide\"}`}\n          onClick={(e) => handleClick(e, !showMagnifyingGlass)}\n        >\n          Magnifying Glass\n        </button>\n        <button\n          className={`button ${gameImg ? \"\" : \"hide\"}`}\n          onClick={() => handleEditMagnifyingGlass(\"increase\")}\n          data-tooltip\n          tabIndex=\"1\"\n          title=\"Increase Glass Size\"\n        >\n          <img\n            className=\"magnification-icons\"\n            src={magnificationLargeIcon}\n            alt=\"Magnification increase\"\n          />\n        </button>\n        <button\n          className={`button  ${gameImg ? \"\" : \"hide\"}`}\n          onClick={() => handleEditMagnifyingGlass(\"decrease\")}\n          hidden={!gameImg}\n          data-tooltip\n          tabIndex=\"1\"\n          title=\"Decrease Glass Size\"\n        >\n          <img\n            className=\"magnification-icons\"\n            src={magnificationSmalIcon}\n            alt=\"Magnification decrease\"\n          />\n        </button>\n        <button\n          className={`button  ${gameImg ? \"\" : \"hide\"}`}\n          onClick={() => handleEditMagnifyingGlass(\"zoomout\")}\n          data-tooltip\n          tabIndex=\"1\"\n          title=\"Decrease Glass Zoom\"\n        >\n          <img\n            className=\"magnification-icons\"\n            src={zoomoutIcon}\n            alt=\"Zoom out\"\n          />\n        </button>\n        <button\n          className={`button   ${gameImg ? \"\" : \"hide\"}`}\n          onClick={() => handleEditMagnifyingGlass(\"zoomin\")}\n          data-tooltip\n          tabIndex=\"1\"\n          title=\"Increase Glass Zoom\"\n        >\n          <img className=\"magnification-icons\" src={zoominIcon} alt=\"Zoom in\" />\n        </button>\n      </div>\n      <div id=\"zoom-buttons-container\"></div>\n      <div hidden={!gameImg}>\n        {typeof gameImg === \"string\" && gameImg.includes(\"hard\") ? (\n          <span>\n            <img src={evilWaldo}></img> <img src={walda}></img>\n          </span>\n        ) : (\n          \"\"\n        )}\n        {typeof gameImg === \"string\" && !gameImg.includes(\"easy\") ? (\n          <img src={wizard}></img>\n        ) : (\n          \"\"\n        )}\n        <img src={waldo}></img>\n      </div>\n\n      <GameChoosePage\n        setGameImg={setGameImg}\n        gameImg={gameImg}\n        modalRef={modalRef}\n        homeRef={homeRef}\n      />\n      <dialog ref={modalRef} id=\"modal\" className=\"modal\">\n        <div id=\"modal-content-wrapper\">\n          <p style={{ textAlign: \"center\", fontSize: \"55px\" }}>Good Luck!</p>\n          {/* <div style={{ textAlign: \"center\", fontSize: \"45px\" }}>\n            <Stopwatch />\n          </div> */}\n          <button\n            className=\"button large\"\n            onClick={() => {\n              modalRef.current.close();\n              homeRef.current.classList.remove(\"modal-overlay\");\n              setStartTimer(true);\n            }}\n          >\n            Start timer!\n          </button>\n        </div>\n      </dialog>\n      <div\n        id=\"grid-container\"\n        style={{\n          backgroundImage: \"url(\" + gameImg + \")\",\n          transform: \"scale(\" + zoom + \")\",\n        }}\n        onMouseMove={handleFollowMouse}\n      >\n        {gameImg ? (\n          <CreateGrid zoom={zoom} setZoom={setZoom} gameImg={gameImg} />\n        ) : (\n          magnifier.hide()\n        )}\n      </div>\n      <span\n        id=\"targeting-box\"\n        hidden={!gameImg}\n        style={{ position: \"absolute\", top: centerY, left: centerX }}\n      ></span>\n    </div>\n  );\n};\n\nexport default Home;\n","/home/fernando/Repositories/where-is-waldo/src/components/navbar.js",["71"],[],"import \"../navbar.scss\";\nconst Navbar = () => {\n  return (\n    <nav id=\"navbar\" class=\"top-bar topbar-responsive\">\n      <div class=\"top-bar-title\">\n        <span\n          data-responsive-toggle=\"topbar-responsive\"\n          data-hide-for=\"medium\"\n        ></span>\n        <a class=\"topbar-responsive-logo\" href=\"#\">\n          <h4>\n            <strong>Where is Waldo?</strong>\n          </h4>\n        </a>\n      </div>\n      <div id=\"topbar-responsive\" class=\"topbar-responsive-links\">\n        <div class=\"top-bar-right\">\n          <ul class=\"menu simple  medium-horizontal\">\n            <li>\n              <button class=\"button hollow topbar-responsive-button\" href=\"#\">\n                Home\n              </button>\n            </li>\n            <li>\n              <button\n                type=\"button\"\n                class=\"button hollow topbar-responsive-button\"\n              >\n                Leaderboard\n              </button>\n            </li>\n            <li>\n              <button class=\"button hollow topbar-responsive-button\">\n                About\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/home/fernando/Repositories/where-is-waldo2/src/index.js",[],[],"/home/fernando/Repositories/where-is-waldo2/src/App.js",[],[],"/home/fernando/Repositories/where-is-waldo2/src/components/navbar.js",["72","73","74","75","76","77","78"],[],"/home/fernando/Repositories/where-is-waldo2/src/components/home.js",["79","80","81","82","83","84"],[],"/home/fernando/Repositories/where-is-waldo/src/components/gamechoosepage.js",["85","86","87","88"],[],"import { useState } from \"react\";\n\nimport helpIcon from \"../assets/icons-images/help-icon.png\";\nimport easy1 from \"../assets/game-images/easy/easy-1.jpg\";\nimport easy2 from \"../assets/game-images/easy/easy-2.jpg\";\nimport easy3 from \"../assets/game-images/easy/easy-3.jpg\";\nimport hard1 from \"../assets/game-images/hard/hard-1.jpg\";\nimport hard2 from \"../assets/game-images/hard/hard-2.jpg\";\nimport hard3 from \"../assets/game-images/hard/hard-3.jpg\";\nimport medium1 from \"../assets/game-images/medium/medium-1.jpg\";\nimport medium2 from \"../assets/game-images/medium/medium-2.jpg\";\nimport medium3 from \"../assets/game-images/medium/medium-3.jpg\";\n\nconst easyImages = [easy1, easy2, easy3];\nconst hardImages = [hard1, hard2, hard3];\nconst mediumImages = [medium1, medium2, medium3];\n\nconst GameChoosePage = ({ setGameImg, gameImg, modalRef, homeRef }) => {\n  const [disable, setDisable] = useState(0);\n  const [difficulty, setDifficulty] = useState(null);\n\n  const handleSelection = (difficulty) => {\n    disable ? setDisable(0) : setDisable(1);\n    setDifficulty(difficulty);\n  };\n\n  const handleModal = () => {\n    modalRef.current.showModal();\n    homeRef.current.classList.add(\"modal-overlay\");\n  };\n  if (gameImg) {\n    return <></>;\n  }\n  if (!disable) {\n    return (\n      <div>\n        <h2 style={{ margin: \"3rem\", textAlign: \"center\" }}>\n          Choose Difficulty\n        </h2>\n        <div id=\"difficulty-selection-container\">\n          <div\n            className=\"flex-child-auto\"\n            onClick={() => handleSelection(easyImages)}\n          >\n            <span\n              style={{\n                fontSize: \"x-large\",\n                fontWeight: \"bold\",\n              }}\n            >\n              Easy\n              <img\n                style={{ width: \"20px\", margin: \"1rem 0 1rem 1rem\" }}\n                className=\"tooltip-icon\"\n                src={helpIcon}\n                data-tooltip\n                tabIndex={\"1\"}\n                title=\"In this game mode you only need to find Waldo\"\n                data-position=\"top\"\n                data-alignment=\"center\"\n              />\n            </span>\n            <img className=\"game-board\" src={easy3} alt=\"\" />\n          </div>\n          <div\n            className=\"flex-child-auto\"\n            onClick={() => handleSelection(mediumImages)}\n          >\n            <span\n              style={{\n                fontSize: \"x-large\",\n                fontWeight: \"bold\",\n              }}\n            >\n              Medium\n              <img\n                style={{ width: \"20px\", margin: \"1rem 0 1rem 1rem\" }}\n                src={helpIcon}\n                data-tooltip\n                className=\"tooltip-icon\"\n                tabIndex={\"1\"}\n                title=\"In this game mode need to find Waldo and the Wizard\"\n                data-position=\"top\"\n                data-alignment=\"center\"\n              />\n            </span>\n            <img className=\"game-board\" src={medium1} alt=\"\" />\n          </div>\n          <div\n            className=\"flex-child-auto\"\n            onClick={() => handleSelection(hardImages)}\n          >\n            <span\n              style={{\n                fontSize: \"x-large\",\n                fontWeight: \"bold\",\n              }}\n            >\n              Hard\n              <img\n                style={{ width: \"20px\", margin: \"1rem 0 1rem 1rem\" }}\n                src={helpIcon}\n                data-tooltip\n                tabIndex={\"1\"}\n                className=\"tooltip-icon\"\n                title=\"In this game mode you need to find all characters\"\n                data-position=\"top\"\n                data-alignment=\"center\"\n              />\n            </span>\n            <img className=\"game-board\" src={hard1} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  if (disable) {\n    const images = difficulty.map((image) => {\n      return (\n        <img\n          src={image}\n          key={image}\n          alt=\"\"\n          onClick={() => {\n            setGameImg(image);\n            handleModal();\n          }}\n        ></img>\n      );\n    });\n    return (\n      <div>\n        <button className=\"button large\" onClick={handleSelection}>\n          &#9664; back\n        </button>\n        <h2 style={{ marginTop: \"2rem\" }}>Choose Game</h2>\n        <h3>\n          {difficulty[0].includes(\"easy\")\n            ? \"Easy\"\n            : difficulty[0].includes(\"medium\")\n            ? \"Medium\"\n            : \"Hard\"}\n        </h3>\n        <div id=\"choose-game-images-container\">{images}</div>\n      </div>\n    );\n  }\n};\n\nexport default GameChoosePage;\n","/home/fernando/Repositories/where-is-waldo/src/utils/gamerules.js",["89","90","91","92","93","94","95","96","97"],[],"let medium_1 = [];\nlet medium_2 = [];\nlet medium_3 = [];\nlet hard_1 = [];\nlet hard_2 = [];\nlet hard_3 = [];\nexport let isGameWon = false;\n\nexport function setIsGameWon() {\n  isGameWon = false;\n}\n\nfunction addHitIndicator(cell) {\n  const hitbox = document.createElement(\"div\");\n  hitbox.classList.add(\"hitbox\");\n  return cell.appendChild(hitbox);\n}\n\nfunction checkForWin(board, cellID) {\n  const clickedCell = document.getElementById(cellID);\n  addHitIndicator(clickedCell);\n  if (board === \"easy-1\" || board === \"medium-1\") {\n    board === \"easy-1\"\n      ? (isGameWon = true) /// win for easy 1\n      : medium_1.length < 1\n      ? medium_1.push(true)\n      : alert(\"win\"); /// win for medium 1\n  } else if (board === \"easy-2\" || board === \"medium-2\") {\n    board === \"easy-2\"\n      ? alert(\"win\") /// win for easy 2\n      : medium_2.length < 1\n      ? medium_2.push(true)\n      : alert(\"win\"); /// win for medium 2\n  } else if (board === \"easy-3\" || board === \"hard-3\") {\n    board === \"easy-3\"\n      ? alert(\"win\") /// win for easy 3\n      : hard_3.length < 3\n      ? hard_3.push(true)\n      : alert(\"win\"); /// win for hard 3\n  } else if (board === \"medium-3\" || \"hard-2\") {\n    if (board === \"medium-3\") {\n      medium_3.length < 1 ? medium_3.push(true) : alert(\"win\"); /// win for medium 3\n    } else {\n      hard_2.length < 3 ? hard_2.push(true) : alert(\"win\"); /// win for hard 2\n    }\n  } else if (board === \"hard-1\") {\n    hard_1.length < 3 ? hard_1.push(true) : alert(\"win\"); ///win for hard 1\n  }\n}\n\nfunction gamerules(cellid, gameImg) {\n  if (!cellid && !gameImg) {\n    medium_1 = [];\n    medium_2 = [];\n    medium_3 = [];\n    hard_1 = [];\n    hard_2 = [];\n    hard_3 = [];\n    return;\n  }\n  const clickedCell = Number(cellid.split(\"-\")[1]);\n  const imageNameRegex = /(medium|easy|hard)-\\d+/;\n  const boardName = gameImg.match(imageNameRegex)[0];\n  const targetingBox = document.getElementById(\"targeting-box\");\n\n  switch (boardName) {\n    case \"easy-1\":\n      if (clickedCell === 310) return checkForWin(boardName, cellid);\n    case \"easy-2\":\n      if (clickedCell === 591) return checkForWin(boardName, cellid);\n    case \"easy-3\":\n      if (clickedCell === 422) return checkForWin(boardName, cellid);\n\n    case \"medium-1\":\n      if (clickedCell === 261 || clickedCell === 310)\n        return checkForWin(boardName, cellid);\n    case \"medium-2\":\n      if (clickedCell === 635 || clickedCell === 591)\n        return checkForWin(boardName, cellid);\n    case \"medium-3\":\n      if (clickedCell === 482 || clickedCell === 460)\n        return checkForWin(boardName, cellid);\n\n    case \"hard-1\":\n      if (\n        clickedCell === 159 ||\n        clickedCell === 583 ||\n        clickedCell === 586 ||\n        clickedCell === 60\n      )\n        return checkForWin(boardName, cellid);\n    case \"hard-2\":\n      if (\n        clickedCell === 482 ||\n        clickedCell === 460 ||\n        clickedCell === 406 ||\n        clickedCell === 542\n      )\n        return checkForWin(boardName, cellid);\n    case \"hard-3\":\n      if (\n        clickedCell === 422 ||\n        clickedCell === 201 ||\n        clickedCell === 482 ||\n        clickedCell === 615\n      )\n        return checkForWin(boardName, cellid);\n    default:\n      targetingBox.animate(\n        [\n          { transform: \"translate(0)\" },\n          { transform: \"translate(-3px)\" },\n          { transform: \"translate(3px)\" },\n          { boxShadow: \"0 0 3px 4px   rgb(255, 122, 122)\" },\n        ],\n        {\n          duration: 90,\n          iterations: 2,\n        }\n      );\n      return;\n  }\n}\n\nexport default gamerules;\n",[],"/home/fernando/Repositories/where-is-waldo/src/components/stopwatch.js",["98","99"],[],"import { useEffect, useState } from \"react\";\nimport { useStopwatch } from \"react-timer-hook\";\nimport { isGameWon } from \"../utils/gamerules\";\nconst Stopwatch = ({ startTimer, setStartTimer, setGameTime }) => {\n  const { seconds, minutes, hours, start, pause, reset } = useStopwatch({\n    autoStart: false,\n  });\n\n  useEffect(() => {\n    if (isGameWon) {\n      setGameTime([minutes, seconds]);\n      return pause();\n    }\n    if (startTimer === true) {\n      start();\n    }\n    if (startTimer === \"pause\") {\n      pause();\n    }\n    if (startTimer === \"reset\") {\n      reset();\n    }\n    if (startTimer === false) {\n      reset();\n      pause();\n    }\n  }, [startTimer, isGameWon]);\n  return (\n    <div id=\"stopwatch-container\">\n      <div id=\"stopwatch\">\n        <p className=\"stopwatch-text\">{hours < 10 ? \"0\" + hours : hours}</p>:\n        <p className=\"stopwatch-text\">\n          {minutes < 10 ? \"0\" + minutes : minutes}\n        </p>\n        :\n        <p className=\"stopwatch-text\">\n          {seconds < 10 ? \"0\" + seconds : seconds}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Stopwatch;\n",{"ruleId":"100","severity":1,"message":"101","line":14,"column":10,"nodeType":"102","messageId":"103","endLine":14,"endColumn":19},{"ruleId":"100","severity":1,"message":"104","line":110,"column":10,"nodeType":"102","messageId":"103","endLine":110,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":317,"column":13,"nodeType":"107","endLine":317,"endColumn":34},{"ruleId":"105","severity":1,"message":"106","line":317,"column":41,"nodeType":"107","endLine":317,"endColumn":58},{"ruleId":"105","severity":1,"message":"106","line":323,"column":11,"nodeType":"107","endLine":323,"endColumn":29},{"ruleId":"105","severity":1,"message":"106","line":327,"column":9,"nodeType":"107","endLine":327,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":10,"column":9,"nodeType":"107","endLine":10,"endColumn":52},{"ruleId":"108","severity":1,"message":"109","line":9,"column":9,"nodeType":"107","endLine":9,"endColumn":52},{"ruleId":"108","severity":1,"message":"109","line":17,"column":15,"nodeType":"107","endLine":17,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":20,"column":15,"nodeType":"107","endLine":20,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":23,"column":15,"nodeType":"107","endLine":23,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":26,"column":15,"nodeType":"107","endLine":26,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":29,"column":15,"nodeType":"107","endLine":29,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":32,"column":15,"nodeType":"107","endLine":32,"endColumn":27},{"ruleId":"100","severity":1,"message":"110","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":23},{"ruleId":"100","severity":1,"message":"111","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":11},{"ruleId":"100","severity":1,"message":"112","line":104,"column":10,"nodeType":"102","messageId":"103","endLine":104,"endColumn":17},{"ruleId":"100","severity":1,"message":"113","line":104,"column":19,"nodeType":"102","messageId":"103","endLine":104,"endColumn":29},{"ruleId":"100","severity":1,"message":"104","line":107,"column":10,"nodeType":"102","messageId":"103","endLine":107,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":118,"column":3,"nodeType":"102","endLine":118,"endColumn":12,"suggestions":"116"},{"ruleId":"105","severity":1,"message":"106","line":52,"column":15,"nodeType":"107","endLine":61,"endColumn":17},{"ruleId":"105","severity":1,"message":"106","line":76,"column":15,"nodeType":"107","endLine":85,"endColumn":17},{"ruleId":"105","severity":1,"message":"106","line":100,"column":15,"nodeType":"107","endLine":109,"endColumn":17},{"ruleId":"105","severity":1,"message":"106","line":111,"column":13,"nodeType":"107","endLine":111,"endColumn":55},{"ruleId":"117","severity":1,"message":"118","line":69,"column":5,"nodeType":"119","messageId":"120","endLine":70,"endColumn":70},{"ruleId":"117","severity":1,"message":"118","line":71,"column":5,"nodeType":"119","messageId":"120","endLine":72,"endColumn":70},{"ruleId":"117","severity":1,"message":"118","line":74,"column":5,"nodeType":"119","messageId":"120","endLine":76,"endColumn":47},{"ruleId":"117","severity":1,"message":"118","line":77,"column":5,"nodeType":"119","messageId":"120","endLine":79,"endColumn":47},{"ruleId":"117","severity":1,"message":"118","line":80,"column":5,"nodeType":"119","messageId":"120","endLine":82,"endColumn":47},{"ruleId":"117","severity":1,"message":"118","line":84,"column":5,"nodeType":"119","messageId":"120","endLine":91,"endColumn":47},{"ruleId":"117","severity":1,"message":"118","line":92,"column":5,"nodeType":"119","messageId":"120","endLine":99,"endColumn":47},{"ruleId":"117","severity":1,"message":"118","line":100,"column":5,"nodeType":"119","messageId":"120","endLine":107,"endColumn":47},{"ruleId":"117","severity":1,"message":"121","line":108,"column":5,"nodeType":"119","messageId":"122","endLine":121,"endColumn":14},{"ruleId":"100","severity":1,"message":"123","line":1,"column":21,"nodeType":"102","messageId":"103","endLine":1,"endColumn":29},{"ruleId":"114","severity":1,"message":"124","line":27,"column":6,"nodeType":"125","endLine":27,"endColumn":29,"suggestions":"126"},"no-unused-vars","'isGameWon' is defined but never used.","Identifier","unusedVar","'windowSize' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'createContext' is defined but never used.","'img' is defined but never used.","'gameImg' is assigned a value but never used.","'setGameImg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setClickedCell'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [clickedCell] as a second argument to the useEffect Hook.",["127"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'minutes', 'pause', 'reset', 'seconds', 'setGameTime', and 'start'. Either include them or remove the dependency array. Outer scope values like 'isGameWon' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["128"],{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Add dependencies array: [clickedCell]",{"range":"133","text":"134"},"Update the dependencies array to be: [startTimer, setGameTime, minutes, seconds, pause, start, reset]",{"range":"135","text":"136"},[3014,3014],", [clickedCell]",[656,679],"[startTimer, setGameTime, minutes, seconds, pause, start, reset]"]